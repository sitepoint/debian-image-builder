#!/bin/bash

declare -i exit_status=0
declare -i essentials=0  # Print essentials in place message

# These variables work differently to normal expectations. If they
# equal 0, they are good to use.
declare -i move_s3_path=2
declare -i partitioning=2
declare -i python=1
declare -i grant_launch_permission=1
declare urllib3_ver

declare -r s3cfg="${HOME}/.s3cfg"

for var in EC2_CERT EC2_PRIVATE_KEY \
    AWS_ACCESS_KEY AWS_SECRET_KEY \
    AWS_DEFAULT_REGION EC2_USER_ID S3_BUCKET \
    CUSTOM_S3_PATH LAUNCH_ACCOUNTS
do
    # Check variable is not empty.
    if [ -z "${!var}" ]
    then
        echo "  unset ${var}"
        # Some missing variables are acceptable.
        if ! [[ "${var}" =~ S3_BUCKET|CUSTOM_S3_PATH|LAUNCH_ACCOUNTS ]]
        then
            exit_status=1
        fi
    # Check certificate path points to a file, if applicable.
    elif [[ "${var}" =~ EC2_CERT|EC2_PRIVATE_KEY ]]
    then
        if [ ! -f "${!var}" ]
        then
            echo "missing ${var}=${!var}"
            exit_status=1
        else
            echo "   good ${var}=${!var}"
        fi
    # Checks against the variable passed.
    else
        echo "   good ${var}=${!var}"
        # Cross off a required variable for the optional move_s3_path
        # plugin.
        if [[ "${var}" =~ S3_BUCKET|CUSTOM_S3_PATH ]]
        then
            move_s3_path=$(( --move_s3_path ))
        # Cross of the required variable for the optional
        # grant-launch-permission-tasks plugin.
        elif [[ "${var}" =~ LAUNCH_ACCOUNTS ]]
        then
            grant_launch_permission=$(( --grant_launch_permission ))
        fi
    fi
done

# AWS_CREDENTIAL_FILE should not be set unless it points to a valid file (which
# only contains AWSAccessKeyId and AWSSecretKey values that would normally be
# read from the above environment variables anyway, making the file redundant.
if [ -z "${AWS_CREDENTIAL_FILE}" ]
then
    echo "   good AWS_CREDENTIAL_FILE is unset"
elif [ ! -f "${AWS_CREDENTIAL_FILE}"  ]
then
    echo "  error AWS_CREDENTIAL_FILE=${AWS_CREDENTIAL_FILE} (unset this)"
else
    echo "     ok AWS_CREDENTIAL_FILE=${AWS_CREDENTIAL_FILE}"
fi

# Check partitioning support.
if ! command -v parted 1>/dev/null
then
    echo "parted is not installed."
else
    partitioning=$(( --partitioning ))
fi
if ! command -v hdparm 1>/dev/null
then
    echo "hdparm is not installed."
else
    partitioning=$(( --partitioning ))
fi

# Check for Python support.
if ! command -v python 1>/dev/null
then
    echo "python is not installed."
    python=$(( --python ))
fi

echo
if [ "${exit_status}" -ne 0 ]
then
    echo "Environment not ready."
else
    if [ ${move_s3_path} -ne 0 ]
    then
        echo "move-s3-path is unavailable."
        essentials=1
    fi
    if [ ${grant_launch_permission} -ne 0 ]
    then
        echo "grant-launch-permission is unavailable."
        essentials=1
    fi
    if [ ${partitioning} -ne 0 ]
    then
        echo "partitioning options are unavailable."
        essentials=1
    fi
    if [ ${essentials} -eq 1 ]
    then
        echo -e "\nEssentials are in place."
    else
        echo "All systems green."
    fi
fi
exit ${exit_status}
