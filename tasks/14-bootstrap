## bootstrap
#

# Concatenate the packages
SAVE_IFS=${IFS}
IFS=","
include="${packages[*]}"
exclude="${exclude_packages[*]}"
IFS=${SAVE_IFS}

# For bootstrapping purposes, we just use the first-listed mirror even
# if multiple are specified.
bootstrap_mirror=${apt_mirrors%% *}

args_hash=$(printf -- "${arch} ${include} -- ${exclude} ${codename}" |
    sha1sum)

tarball="${tarballdir}/bootstrap-${args_hash:0:7}.tar"

include_param=""
if [ -n "${include}" ]
then
    include_param="--include=${include}"
fi

exclude_param=""
if [ -n "${exclude}" ]
then
    exclude_param="--exclude=${exclude}"
fi

if [ ${refresh} -eq 1 ]
then
    rm -f "${tarball}"
fi

# When testing, some bootstraps can fail, instead of re-downloading it
# all we create a tarball containing all the necessary things for
# bootstrapping
if [ ! -e "${tarball}" ]
then
    log "Creating the bootstrap tarball"
    debootstrap --arch ${arch} --make-tarball="${tarball}" \
        --keep-debootstrap-dir \
        ${include_param} ${exclude_param} \
        ${codename} "${imagedir}" ${bootstrap_mirror} \
        || die "Creating bootstrap tarball failed!"
fi

log "Bootstrapping"
debootstrap --arch ${arch} --unpack-tarball="${tarball}" \
    ${include_param} ${exclude_param} \
    ${codename} "${imagedir}" ${bootstrap_mirror} \
    || die "Bootstrapping failed!"
