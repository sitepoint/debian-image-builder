# Mostly copied from the create-volume task
#
# Note that we need to reset ${fs_device_path} in addition to
# block_device_path since the ${block_device_path} value might have
# changed.

# Get a random device letter, we will hang forever if we try
# to attach a volume to an already mapped device.
for device_letter in {f..z}
do
    block_device_path="/dev/xvd${device_letter}"
    if [ ! -b "${block_device_path}" ]
    then
        break
    fi
done

if [ -b "${block_device_path}" ]
then
    die "No free device letters found (tried xvdf to xvdz)!"
fi

logn "Reattaching the bootstrapped volume"
aws ec2 attach-volume \
    --volume-id "${volume_id}" \
    --instance-id "${instance_id}" \
    --device "/dev/xv${device_letter}"

# Wait until the volume is attached
dotdot "test -b ${block_device_path} && echo attached"

# Set ${fs_device_path}
if [ "${fs_device_path:$((${#fs_device_path} - 1)):1}" = 1 ]
then
    fs_device_path="${block_device_path}1"
else
    fs_device_path="${block_device_path}"
fi

# Recreate the imagedir, it was delete in the unmount task
log "Creating mount location ${imagedir}"
mkdir -p "${imagedir}"

mount "${fs_device_path}" "${imagedir}"
log "The volume has been mounted at ${imagedir}"

log "Run the following commands to unmount and remove the volume:"
logplain \
    "umount ${imagedir}" \
    "rm -rf ${imagedir}" \
    "aws ec2 detach-volume --volume-id ${volume_id}" \
    "aws ec2 delete-volume --volume-id ${volume_id}"
